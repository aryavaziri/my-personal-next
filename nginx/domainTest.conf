# upstream frontend_dev {
# 	server frontend_dev:3000;
# }
upstream frontend {
	server frontend:3000;
}

upstream backend {
	server backend:3000;
}

upstream casinoa {
	server nginx_casinoa:81;
}




server { # simple reverse-proxy
    listen 80;
    server_name  casinoa.nl www.casinoa.nl;

    location / {
      proxy_pass http://casinoa;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_buffering off;
      # Websocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }
  }




server {
    listen 80;
    server_name www.aryav.nl aryav.nl;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://aryav.nl$request_uri;
    }
}

server {
    listen 80;
    server_name v1.arya.nl;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://v1.aryav.nl$request_uri;
    }
}


server {
    listen 443 ssl;
    server_name v1.aryav.nl;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/aryav.nl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aryav.nl/privkey.pem;

    root /var/www/old_website;
    index index.html;
    location / {
        try_files $uri $uri/ =404;
        }
}

server {
    listen 443 ssl;
    server_name aryav.nl www.aryav.nl;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/aryav.nl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aryav.nl/privkey.pem;

    root /var/www/new_website;
    client_max_body_size 10M;

      location /static/ {
        proxy_pass http://backend;
        }

      location /auth/ {
        proxy_pass http://backend;
        }
      location /graphql/ {
        proxy_pass http://backend;
        }

      location /api/ {
        proxy_pass http://backend;
        }

    location / {
        proxy_pass http://frontend;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto $scheme;
      
        proxy_buffering off;

        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

}